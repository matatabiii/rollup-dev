// 【必須】variable, functions, mixins 読み込み
@use "../../foundation/vars/variable" as *;
@use "../../foundation/vars/functions" as *;
@use "../../foundation/vars/mixins" as *;

/*////////////////////////////

@component/text
テキスト関連の汎用スタイル

////////////////////////////*/
// font-size
@for $var from 10 through 36 {
  .c-size#{$var} {
    font-size: rem($var);
    @include break("md") {
      @if $var >= 30 {
        font-size: rem($var * 0.8);
      } @else if $var >= 18 {
        font-size: rem($var * 0.9);
      }
    }
  }
}
[class*="c-size16.5"] {
  font-size: rem(16.5);
}
[class*="c-size18.5"] {
  font-size: rem(18.5);
  @include break("md") {
    font-size: rem(18.5 * 0.9);
  }
}

// line-height
[class*="c-lh1"] {
  line-height: 1;
}
[class*="c-lh1.2"] {
  line-height: 1.2;
}
[class*="c-lh1.3"] {
  line-height: 1.3;
}
[class*="c-lh1.4"] {
  line-height: 1.4;
}
[class*="c-lh1.5"] {
  line-height: 1.5;
}
[class*="c-lh1.6"] {
  line-height: 1.6;
}
[class*="c-lh1.7"] {
  line-height: 1.7;
}
[class*="c-lh1.75"] {
  line-height: 1.75;
}
[class*="c-lh1.8"] {
  line-height: 1.8;
}
[class*="c-lh1.9"] {
  line-height: 1.9;
}
[class*="c-lh2"] {
  line-height: 2;
}

// letter-spacing
$ls-map: (
  '10': 10,
  '20': 20,
  '30': 30,
  '40': 40,
  '50': 50,
  '60': 60,
  '70': 70,
  '80': 80,
  '90': 90,
  '100': 100,
  '110': 110,
  '120': 120,
  '130': 130,
  '140': 140,
  '150': 150,
  '160': 160,
  '170': 170,
  '180': 180,
  '190': 190,
  '200': 200,
);
@each $key, $val in $ls-map {
  .c-ls#{$key} {
    letter-spacing: ls($val);
  }
}
